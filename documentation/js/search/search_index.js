var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.18,1,2.053]],["body/modules/AppModule.html",[0,1.649,1,3.965,2,1.451,3,1.793,4,2.76,5,2.76,6,3.352,7,0.032,8,3.352,9,3.352,10,2.339,11,1.738,12,1.738,13,0.276,14,0.276,15,0.195,16,3.307,17,2.915,18,0.501,19,0.88,20,4.45,21,1.917,22,2.132,23,1.225,24,4.45,25,3.307,26,2.868,27,3.307,28,3.307,29,3.307,30,3.307,31,3.307,32,3.307,33,3.307,34,3.307,35,2.76,36,3.307,37,3.307,38,1.332,39,1.917,40,0.276,41,0.121,42,0.022,43,0.022]],["title/modules/AuthModule.html",[0,1.18,44,2.053]],["body/modules/AuthModule.html",[0,1.823,2,1.692,3,1.983,7,0.032,10,2.587,11,2.027,12,2.027,13,0.322,14,0.322,15,0.227,17,2.235,18,0.452,19,1.026,38,1.554,39,2.853,40,0.322,41,0.141,42,0.024,43,0.024,44,3.889,45,3.219,46,3.219,47,3.497,48,3.856,49,4.922,50,2.027,51,3.856,52,3.856,53,3.856,54,2.799,55,3.856,56,3.856,57,3.856,58,3.856,59,2.799]],["title/classes/CreateRequestDto.html",[41,0.117,60,1.527]],["body/classes/CreateRequestDto.html",[7,0.032,13,0.211,14,0.211,15,0.149,18,0.211,40,0.211,41,0.135,42,0.018,43,0.018,60,1.767,61,0.862,62,5.023,63,1.835,64,0.43,65,1.157,66,2.521,67,2.521,68,2.521,69,2.521,70,2.521,71,1.258,72,2.521,73,2.521,74,2.521,75,2.521,76,2.521,77,1.144,78,3.006,79,2.401,80,5.478,81,1.223,82,2.528,83,4.404,84,2.528,85,2.528,86,3.081,87,5.082,88,2.528,89,2.528,90,2.528,91,2.528,92,2.528,93,2.528,94,2.528,95,2.528,96,2.528,97,2.528,98,1.629,99,5.478]],["title/classes/CreateReserveDto.html",[41,0.117,100,1.674]],["body/classes/CreateReserveDto.html",[7,0.032,13,0.288,14,0.288,15,0.204,18,0.288,40,0.288,41,0.168,42,0.023,43,0.023,61,1.179,64,0.588,65,1.439,77,1.067,78,2.908,79,2.295,81,1.169,83,4.457,98,2.227,100,2.409,101,4.888,102,2.508,103,4.292,104,3.732,105,4.292,106,2.256,107,4.292,108,3.456,109,3.456,110,3.456,111,1.439,112,5.142,113,3.456,114,3.456]],["title/classes/CreateSpaceDto.html",[41,0.117,115,1.674]],["body/classes/CreateSpaceDto.html",[7,0.032,13,0.32,14,0.32,15,0.227,18,0.32,40,0.32,41,0.18,42,0.024,43,0.024,61,1.31,64,0.654,65,1.542,77,1.013,78,2.889,79,2.18,81,1.11,83,4.447,86,3.488,98,2.476,115,2.581,116,4.76,117,2.788,118,4.517,119,4.517,120,3.841,121,3.841,122,3.841]],["title/injectables/DatabaseConfigService.html",[26,2.053,123,1.086]],["body/injectables/DatabaseConfigService.html",[7,0.032,13,0.254,14,0.254,15,0.18,18,0.402,19,0.81,21,1.765,23,1.128,26,2.711,40,0.254,41,0.112,42,0.021,43,0.021,64,0.518,71,1.216,77,0.902,78,2.614,81,0.989,123,1.434,124,1.6,125,4.338,126,2.541,127,1.434,128,3.106,129,4.206,130,5.197,131,1.765,132,2.541,133,4.338,134,3.044,135,1.434,136,1.434,137,3.511,138,4.206,139,3.044,140,3.044,141,1.434,142,3.044,143,4.819,144,4.206,145,3.044,146,1.765,147,1.765,148,3.106,149,3.044,150,1.765,151,1.226,152,3.044,153,3.044,154,3.044,155,3.044,156,1.558,157,3.044,158,3.044,159,3.044,160,3.044,161,3.044,162,3.044,163,3.044,164,3.044,165,3.044,166,3.044,167,3.044,168,3.044,169,4.206,170,3.044,171,1.765,172,3.044,173,3.044,174,3.044,175,3.044,176,3.044]],["title/injectables/JwtStrategy.html",[47,1.846,123,1.086]],["body/injectables/JwtStrategy.html",[7,0.032,13,0.288,14,0.288,15,0.204,18,0.457,19,0.919,21,2.003,40,0.288,41,0.127,42,0.023,43,0.023,47,2.656,50,1.816,54,2.508,64,0.588,71,1.325,77,0.858,81,0.94,123,1.563,124,1.816,127,1.563,131,2.003,132,2.885,133,4.571,135,1.563,136,1.563,137,3.825,141,1.179,146,2.003,150,2.003,151,1.392,177,2.885,178,2.702,179,4.583,180,3.456,181,4.583,182,3.456,183,4.583,184,3.456,185,3.456,186,3.456,187,2.885,188,3.456,189,3.456,190,2.227,191,3.456,192,1.656,193,3.456,194,3.456,195,3.456,196,3.456,197,3.456,198,3.456,199,2.227,200,3.456]],["title/entities/Request.html",[201,1.527,202,1.283]],["body/entities/Request.html",[7,0.032,13,0.176,14,0.176,15,0.125,18,0.269,40,0.176,41,0.078,42,0.016,43,0.016,64,0.36,65,1.013,66,2.268,67,2.268,68,2.268,69,2.268,70,2.268,71,1.131,72,2.268,73,2.268,74,2.268,75,2.268,76,2.268,77,1.118,78,2.935,79,2.341,81,1.192,86,2.821,111,1.013,171,1.226,201,1.547,202,1.3,203,1.766,204,1.229,205,4.218,206,2.08,207,2.115,208,2.115,209,2.115,210,2.115,211,2.115,212,2.115,213,3.653,214,3.038,215,3.227,216,2.115,217,2.115,218,2.115,219,2.115,220,2.115,221,3.227,222,2.115,223,2.115,224,2.115,225,2.115,226,2.08,227,2.115,228,2.115,229,2.115,230,2.115,231,3.912,232,2.115,233,2.115,234,2.115,235,2.115,236,2.115,237,4.262,238,0.928,239,2.342,240,1.535,241,1.014,242,3.745,243,1.014,244,1.363,245,4.647,246,1.363,247,1.363,248,2.115,249,2.115,250,1.363,251,1.363,252,3.227,253,1.363]],["title/controllers/RequestController.html",[254,1.527,255,2.053]],["body/controllers/RequestController.html",[7,0.032,13,0.204,14,0.204,15,0.144,18,0.452,19,0.651,38,0.986,40,0.204,41,0.09,42,0.018,43,0.018,50,1.286,60,2.514,64,0.417,71,1.361,77,0.881,79,2.021,81,1.029,111,1.783,127,1.227,135,1.605,136,1.605,141,1.711,146,1.419,156,1.858,192,1.173,199,1.577,202,1.45,204,1.647,238,1.074,254,1.173,255,2.32,256,2.043,257,1.776,258,1.227,259,2.256,260,1.725,261,1.579,262,2.046,263,1.776,264,3.099,265,2.447,266,2.326,267,2.447,268,1.173,269,2.613,270,2.447,271,1.286,272,2.613,273,2.447,274,1.173,275,2.924,276,3.599,277,2.447,278,2.613,279,1.776,280,1.776,281,3.099,282,2.447,283,1.776,284,1.419,285,1.892,286,2.043,287,1.419,288,2.32,289,1.419,290,1.776,291,1.776,292,1.776,293,2.447,294,2.447,295,1.776,296,1.776,297,2.447,298,2.447,299,1.776,300,2.447,301,1.776,302,2.447,303,1.776,304,2.447,305,2.447,306,2.447]],["title/modules/RequestModule.html",[0,1.18,6,1.846]],["body/modules/RequestModule.html",[0,1.819,2,1.686,3,1.978,6,3.493,7,0.032,10,2.581,11,2.019,12,2.019,13,0.32,14,0.32,15,0.227,17,2.227,18,0.492,19,1.022,22,2.476,23,1.423,38,1.978,39,2.846,40,0.32,41,0.141,42,0.024,43,0.024,202,1.548,255,3.488,284,2.227,285,3.168,286,3.207,307,3.207,308,3.207,309,3.841,310,3.841,311,3.841]],["title/classes/RequestRepositoryMock.html",[41,0.117,312,1.846]],["body/classes/RequestRepositoryMock.html",[7,0.032,13,0.219,14,0.219,15,0.155,18,0.219,40,0.219,41,0.096,42,0.019,43,0.019,61,0.896,64,0.447,65,1.19,66,2.197,67,2.197,68,2.197,69,2.197,70,2.197,71,1.408,72,2.197,73,2.197,74,2.197,75,2.197,76,2.197,77,0.911,81,1.059,127,1.293,135,1.293,136,1.293,141,1.66,148,1.694,151,1.961,156,1.803,202,2.233,204,1.396,206,2.443,214,3.138,226,2.443,243,1.817,244,2.443,246,2.443,247,2.443,250,2.443,251,2.443,253,2.443,261,2.136,266,2.166,312,2.197,313,4.489,314,1.907,315,4.447,316,4.063,317,3.712,318,3.164,319,1.907,320,2.752,321,2.752,322,2.752,323,3.533,324,2.752,325,2.752,326,2.197,327,2.443,328,2.193,329,2.193,330,2.193,331,2.628,332,2.628,333,3.164,334,2.628,335,2.628,336,2.628,337,4.447]],["title/classes/RequestRepositoryMock-1.html",[41,0.098,243,1.277,312,1.545]],["body/classes/RequestRepositoryMock-1.html",[7,0.032,13,0.203,14,0.203,15,0.144,18,0.203,40,0.203,41,0.089,42,0.018,43,0.018,61,0.831,64,0.414,65,1.126,66,2.079,67,2.079,68,2.079,69,2.079,70,2.079,71,1.447,72,2.079,73,2.079,74,2.079,75,2.079,76,2.079,77,0.937,81,1.027,111,1.337,127,1.223,135,1.452,136,1.452,141,1.601,147,1.412,148,1.57,151,1.892,156,1.74,202,2.356,204,1.572,206,2.312,214,3.027,226,2.312,243,2.251,244,2.312,246,2.312,247,2.312,250,2.312,251,2.312,253,2.312,261,1.574,266,2.109,271,1.885,284,1.412,312,2.079,314,1.768,316,3.92,317,3.553,318,2.994,319,1.768,320,2.603,321,2.603,322,2.603,323,3.409,324,2.603,325,2.603,326,2.079,327,2.312,328,2.033,329,2.033,330,2.033,333,2.994,338,3.801,339,2.435,340,2.435,341,2.435,342,3.553,343,2.033,344,2.033,345,2.033,346,3.586,347,3.586,348,2.994,349,2.435]],["title/injectables/RequestService.html",[123,1.086,285,1.674]],["body/injectables/RequestService.html",[7,0.032,13,0.194,14,0.194,15,0.137,18,0.43,19,0.619,23,0.862,40,0.194,41,0.085,42,0.017,43,0.017,60,2.354,64,0.396,71,1.42,77,0.92,81,1.057,111,1.76,123,1.183,124,1.223,127,1.183,128,1.5,131,2.01,135,1.675,136,1.675,141,1.675,147,2.663,150,1.349,151,0.938,156,1.82,178,3.168,192,1.116,202,1.979,204,1.676,241,1.116,258,1.183,259,2.202,260,1.662,261,1.522,262,1.987,263,2.517,266,2.298,268,1.662,271,1.823,274,1.116,275,2.882,284,1.349,285,1.823,287,1.349,288,2.235,289,1.349,350,1.943,351,2.327,352,3.334,353,2.327,354,3.468,355,2.327,356,2.327,357,2.327,358,2.327,359,2.327,360,1.689,361,1.689,362,2.327,363,3.873,364,2.327,365,2.327,366,2.327,367,1.689,368,2.327,369,1.689,370,2.517,371,2.327,372,1.689,373,2.327,374,2.327]],["title/classes/RequestServiceMock.html",[41,0.117,375,2.312]],["body/classes/RequestServiceMock.html",[7,0.032,13,0.18,14,0.18,15,0.127,18,0.331,40,0.18,41,0.079,42,0.016,43,0.016,60,2.401,61,0.737,64,0.368,65,1.03,66,1.901,67,1.901,68,1.901,69,1.901,70,1.901,71,1.376,72,1.901,73,1.901,74,1.901,75,1.901,76,1.901,77,0.938,81,1.028,111,1.573,127,1.119,135,1.352,136,1.352,141,1.622,148,1.393,151,1.783,156,1.763,178,3.127,202,2.018,204,1.634,206,2.114,214,2.852,226,2.114,243,2.121,244,2.114,246,2.114,247,2.114,250,2.114,251,2.114,253,2.114,258,1.119,259,2.121,260,1.572,261,1.942,262,1.9,263,2.381,266,2.324,268,1.572,274,1.036,275,2.818,284,1.253,287,1.253,288,2.114,289,1.253,319,1.569,320,2.381,321,2.381,322,2.381,323,3.212,324,2.381,325,2.381,326,1.901,327,2.114,338,3.778,342,3.694,343,1.804,344,1.804,345,1.804,348,2.738,375,2.381,376,1.804,377,2.161,378,2.161,379,2.161,380,2.161,381,2.161,382,2.161]],["title/entities/Reserve.html",[201,1.527,383,1.398]],["body/entities/Reserve.html",[7,0.032,13,0.237,14,0.237,15,0.167,18,0.387,40,0.237,41,0.104,42,0.02,43,0.02,64,0.483,65,1.257,77,1.033,78,2.775,79,2.222,81,1.132,103,3.873,104,3.368,105,3.873,106,2.488,107,3.873,111,1.583,171,1.644,201,1.919,204,1.457,205,3.858,237,4.004,238,1.245,239,3.368,240,3.858,241,1.36,242,3.426,243,1.36,383,2.212,384,2.368,385,2.837,386,2.837,387,2.837,388,2.837,389,4.003,390,2.837,391,2.837,392,2.837,393,2.837,394,4.003,395,4.003,396,3.342,397,2.837,398,4.003,399,2.837,400,2.837,401,4.003,402,2.837,403,2.837,404,2.368,405,2.837]],["title/controllers/ReserveController.html",[254,1.527,406,2.053]],["body/controllers/ReserveController.html",[7,0.032,13,0.206,14,0.206,15,0.145,18,0.453,19,0.656,38,0.993,40,0.206,41,0.09,42,0.018,43,0.018,50,1.296,64,0.42,71,1.366,77,0.884,79,2.027,81,1.032,100,2.764,111,1.787,127,1.234,135,1.611,136,1.611,141,1.716,146,1.429,156,1.864,192,1.182,199,1.589,204,1.652,238,1.082,254,1.182,257,1.79,258,1.234,259,2.264,260,1.735,261,1.588,262,2.055,264,3.112,266,2.119,268,1.182,269,2.627,271,1.296,272,2.627,274,1.182,278,2.627,279,1.79,280,1.79,281,3.429,283,1.79,287,1.429,289,1.429,290,1.79,291,1.79,292,1.79,295,1.79,296,1.79,299,1.79,301,1.79,303,1.79,383,1.588,406,2.333,407,2.058,408,2.058,409,2.465,410,2.465,411,2.465,412,2.465,413,3.232,414,3.021,415,2.465,416,2.058,417,1.79,418,1.902,419,2.058,420,2.627,421,2.465,422,2.465,423,2.465,424,2.465,425,2.465,426,2.465,427,2.465,428,2.465,429,2.465]],["title/modules/ReserveModule.html",[0,1.18,8,1.846]],["body/modules/ReserveModule.html",[0,1.81,2,1.673,3,1.968,7,0.032,8,3.486,10,2.568,11,2.004,12,2.004,13,0.318,14,0.318,15,0.225,17,2.21,18,0.49,19,1.014,22,3.149,23,1.412,38,1.968,39,2.832,40,0.318,41,0.14,42,0.024,43,0.024,59,2.767,383,1.673,406,3.475,417,2.767,418,3.161,419,3.182,430,3.182,431,3.182,432,3.812,433,3.812,434,3.812]],["title/injectables/ReserveService.html",[123,1.086,418,1.674]],["body/injectables/ReserveService.html",[7,0.032,13,0.196,14,0.196,15,0.139,18,0.431,19,0.625,23,0.87,40,0.196,41,0.086,42,0.017,43,0.017,64,0.4,71,1.426,77,0.923,81,1.061,100,2.592,111,1.764,123,1.191,124,1.235,127,1.191,128,1.514,131,2.024,135,1.682,136,1.682,141,1.682,147,2.675,150,1.362,151,0.946,156,1.827,178,3.173,192,1.126,204,1.623,241,1.126,258,1.191,259,2.212,260,1.674,261,1.532,262,1.674,266,2.082,268,1.674,271,1.835,274,1.674,287,1.362,289,1.362,352,3.35,360,1.705,361,1.705,363,3.885,367,1.705,369,1.705,370,2.535,372,1.705,383,2.164,408,2.915,413,3.187,417,1.705,418,1.835,420,2.535,435,1.961,436,2.349,437,2.349,438,3.492,439,2.349,440,2.349,441,2.349,442,2.349,443,2.915,444,2.349,445,2.349,446,2.349,447,2.349,448,2.349,449,2.349,450,2.349,451,2.349,452,2.349]],["title/entities/Space.html",[106,1.398,201,1.527]],["body/entities/Space.html",[7,0.032,13,0.247,14,0.247,15,0.175,18,0.396,35,4.288,40,0.247,41,0.109,42,0.02,43,0.02,64,0.504,65,1.296,77,1.011,78,2.681,79,2.176,81,1.108,86,3.062,106,1.811,111,1.296,118,3.965,119,4.509,171,1.718,201,1.978,204,1.492,205,3.448,213,3.446,237,3.921,238,1.3,239,3.448,240,2.151,241,1.42,242,3.062,243,1.42,245,3.965,326,1.718,383,2.609,396,3.446,453,2.473,454,4.128,455,2.963,456,2.963,457,2.963,458,4.128,459,2.963,460,2.963,461,2.963,462,4.128,463,4.128,464,2.963,465,2.963,466,2.963,467,4.128,468,2.963,469,2.963]],["title/controllers/SpaceController.html",[254,1.527,470,2.053]],["body/controllers/SpaceController.html",[7,0.032,13,0.197,14,0.197,15,0.139,18,0.447,19,0.628,38,0.951,40,0.197,41,0.087,42,0.017,43,0.017,50,1.241,64,0.402,71,1.337,77,0.866,79,1.991,81,1.014,106,1.538,111,1.767,115,2.721,127,1.195,135,1.577,136,1.577,141,1.685,146,1.368,156,1.831,178,3.176,192,1.131,199,1.521,204,1.626,238,1.036,254,1.131,257,1.713,258,1.195,259,2.217,260,1.68,262,2.003,264,3.034,266,2.218,268,1.131,269,2.544,272,2.544,274,1.131,278,2.544,279,3.034,280,1.713,281,3.357,283,1.713,290,1.713,291,1.713,292,1.713,295,1.713,296,1.713,299,1.713,301,1.713,303,1.713,414,2.925,416,1.97,443,1.97,470,2.259,471,1.97,472,1.97,473,2.36,474,2.36,475,2.36,476,2.36,477,2.36,478,3.191,479,2.36,480,1.842,481,1.97,482,1.713,483,1.97,484,2.544,485,1.97,486,2.36,487,2.36,488,2.36,489,2.36,490,2.36,491,2.36,492,2.36,493,2.36,494,2.36]],["title/modules/SpaceModule.html",[0,1.18,9,1.846]],["body/modules/SpaceModule.html",[0,1.81,2,1.673,3,1.968,7,0.032,9,3.486,10,2.568,11,2.004,12,2.004,13,0.318,14,0.318,15,0.225,17,2.21,18,0.49,19,1.014,22,3.149,23,1.412,38,1.968,39,2.832,40,0.318,41,0.14,42,0.024,43,0.024,59,2.767,106,1.673,470,3.475,480,3.161,481,3.182,482,2.767,495,3.182,496,3.182,497,3.812,498,3.812,499,3.812]],["title/injectables/SpaceService.html",[123,1.086,480,1.674]],["body/injectables/SpaceService.html",[7,0.032,13,0.195,14,0.195,15,0.138,18,0.431,19,0.624,23,0.868,40,0.195,41,0.086,42,0.017,43,0.017,64,0.399,71,1.425,77,0.922,81,1.06,106,2.162,111,1.763,115,2.59,123,1.189,124,1.232,127,1.189,128,1.511,131,2.021,135,1.68,136,1.68,141,1.68,147,2.672,150,1.359,151,0.944,156,1.825,178,3.172,192,1.123,204,1.622,241,1.123,258,1.189,259,2.209,260,1.671,261,1.53,262,1.671,266,2.302,268,1.671,271,1.832,274,1.671,352,3.346,360,1.701,361,1.701,363,3.748,367,1.701,369,1.701,370,2.53,372,1.701,472,2.91,478,3.185,480,1.832,482,1.701,483,1.956,484,2.53,485,1.956,500,1.956,501,2.344,502,2.344,503,3.486,504,2.344,505,2.344,506,2.344,507,2.344,508,2.344,509,2.344,510,2.344,511,2.344,512,2.344,513,2.344,514,2.344,515,2.344,516,2.344]],["title/classes/UpdateRequestDto.html",[41,0.117,275,1.674]],["body/classes/UpdateRequestDto.html",[7,0.031,13,0.375,14,0.375,15,0.265,18,0.452,40,0.375,41,0.165,42,0.027,43,0.027,60,2.157,61,1.535,63,3.266,190,2.9,258,1.535,275,2.847,288,2.9,517,3.756,518,3.266,519,2.9,520,2.9,521,4.5]],["title/classes/UpdateReserveDto.html",[41,0.117,413,1.846]],["body/classes/UpdateReserveDto.html",[7,0.031,13,0.375,14,0.375,15,0.265,18,0.452,40,0.375,41,0.165,42,0.027,43,0.027,61,1.535,100,2.365,102,3.266,190,2.9,258,1.535,413,3.139,420,3.266,518,3.266,519,2.9,520,2.9,522,3.756,523,4.5]],["title/classes/UpdateSpaceDto.html",[41,0.117,478,1.846]],["body/classes/UpdateSpaceDto.html",[7,0.031,13,0.375,14,0.375,15,0.265,18,0.452,40,0.375,41,0.165,42,0.027,43,0.027,61,1.535,115,2.365,117,3.266,190,2.9,258,1.535,478,3.139,484,3.266,518,3.266,519,2.9,520,2.9,524,3.756,525,4.5]],["title/coverage.html",[526,3.149]],["body/coverage.html",[7,0.032,15,0.172,26,1.882,41,0.217,42,0.02,43,0.02,47,1.692,60,1.4,62,2.437,63,2.966,77,0.547,100,1.535,101,2.437,102,2.966,106,1.281,115,1.535,116,2.437,117,2.966,123,1.832,125,2.437,126,2.437,151,1.176,177,2.437,201,2.259,202,1.176,203,2.437,254,2.259,255,1.882,256,2.437,275,1.535,285,1.535,312,2.368,313,2.437,314,2.966,338,2.966,350,2.437,375,2.119,376,2.437,383,1.281,384,2.437,406,1.882,407,2.437,413,1.692,418,1.535,435,2.437,453,2.437,470,1.882,471,2.437,478,1.692,480,1.535,500,2.437,517,2.437,522,2.437,524,2.437,526,2.119,527,2.92,528,2.92,529,2.92,530,6.396,531,4.085,532,2.437,533,2.92,534,2.437,535,5.715,536,2.92,537,2.92,538,5.567,539,5.104,540,2.92,541,2.92]],["title/dependencies.html",[3,1.542,542,2.224]],["body/dependencies.html",[3,1.572,7,0.032,19,1.038,21,2.262,23,1.445,41,0.2,42,0.024,43,0.024,50,2.051,54,2.832,98,2.515,187,4.139,238,1.712,519,2.515,520,2.515,543,5.735,544,3.902,545,3.902,546,3.902,547,3.902,548,3.902,549,3.902,550,3.257,551,3.902,552,3.902,553,3.257,554,3.902,555,3.902,556,3.902,557,3.257,558,3.902,559,3.902,560,3.902,561,3.902,562,3.902,563,3.902,564,3.902,565,3.902]],["title/miscellaneous/functions.html",[566,2.224,567,3.196]],["body/miscellaneous/functions.html",[7,0.028,42,0.028,43,0.028,64,0.829,532,4.068,534,5.015,566,4.068,567,4.068,568,4.873]],["title/index.html",[64,0.453,569,2.665,570,2.665]],["body/index.html",[3,1.208,7,0.021,15,0.245,21,1.738,23,1.111,41,0.153,42,0.021,43,0.021,61,1.023,65,1.307,238,1.316,241,1.437,242,1.933,258,1.419,383,1.316,404,3.474,526,2.177,550,2.503,553,2.503,557,2.503,571,4.78,572,2.999,573,2.999,574,2.999,575,2.999,576,2.999,577,2.999,578,5.961,579,2.999,580,2.999,581,4.162,582,2.999,583,2.999,584,4.162,585,5.425,586,4.162,587,2.999,588,4.162,589,2.999,590,2.999,591,2.999,592,2.999,593,2.999,594,2.999,595,2.999,596,2.999,597,2.999,598,4.162,599,4.162,600,2.503,601,2.503,602,2.999,603,2.999,604,2.999,605,2.999,606,2.999,607,2.999,608,2.999,609,2.999,610,2.999,611,2.999,612,2.999,613,2.999,614,2.999,615,2.999,616,2.999,617,2.999,618,6.27,619,2.999,620,5.425,621,4.78,622,5.164,623,2.999,624,2.999,625,2.999,626,2.999,627,2.999,628,4.78,629,2.999,630,4.162,631,2.999,632,2.999,633,2.999,634,2.999,635,2.999,636,2.999,637,2.999,638,2.999]],["title/modules.html",[2,1.904]],["body/modules.html",[1,2.887,2,1.966,6,2.597,7,0.027,8,2.597,9,2.597,42,0.027,43,0.027,44,2.887,639,6.162,640,6.162,641,6.162,642,6.162]],["title/overview.html",[643,3.622]],["body/overview.html",[1,3.968,2,1.623,3,1.93,4,3.088,5,3.088,6,3.376,7,0.031,8,3.376,9,3.376,10,2.519,11,1.944,12,1.944,38,1.49,42,0.024,43,0.024,44,3.624,45,3.088,46,3.088,47,3.081,61,1.262,124,1.944,171,2.144,285,2.794,307,3.088,308,3.088,326,2.778,327,2.384,418,2.794,430,3.088,431,3.088,480,2.794,495,3.088,496,3.088,601,4,643,3.088]],["title/properties.html",[65,1.202,542,2.224]],["body/properties.html",[7,0.031,42,0.028,43,0.028,65,1.508,104,3.486,600,4.009,644,4.803,645,4.803,646,4.803,647,4.803]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":644,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":454,"title":{},"body":{"entities/Space.html":{}}}],["09:00",{"_index":389,"title":{},"body":{"entities/Reserve.html":{}}}],["1",{"_index":243,"title":{"classes/RequestRepositoryMock-1.html":{}},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"entities/Space.html":{}}}],["1'})@column('text",{"_index":459,"title":{},"body":{"entities/Space.html":{}}}],["1.0.1",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":231,"title":{},"body":{"entities/Request.html":{}}}],["10'})@column('text",{"_index":233,"title":{},"body":{"entities/Request.html":{}}}],["1000",{"_index":344,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["12",{"_index":214,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["12'})@column('date",{"_index":215,"title":{},"body":{"entities/Request.html":{}}}],["12'})@column('text",{"_index":217,"title":{},"body":{"entities/Request.html":{}}}],["12:00",{"_index":403,"title":{},"body":{"entities/Reserve.html":{}}}],["12:00'})@column",{"_index":390,"title":{},"body":{"entities/Reserve.html":{}}}],["15",{"_index":324,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["18",{"_index":325,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["19",{"_index":469,"title":{},"body":{"entities/Space.html":{}}}],["19'})@column('text",{"_index":455,"title":{},"body":{"entities/Space.html":{}}}],["1})@manytoone(undefined",{"_index":393,"title":{},"body":{"entities/Reserve.html":{}}}],["1})@primarygeneratedcolumn",{"_index":219,"title":{},"body":{"entities/Request.html":{}}}],["2.2.0",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":213,"title":{},"body":{"entities/Request.html":{},"entities/Space.html":{}}}],["3",{"_index":601,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.0.2",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":326,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{},"entities/Space.html":{},"overview.html":{}}}],["5'})@column('text",{"_index":465,"title":{},"body":{"entities/Space.html":{}}}],["5433:5432",{"_index":609,"title":{},"body":{"index.html":{}}}],["6.1.4",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["8.8.0",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":327,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{},"overview.html":{}}}],["9.0.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["999888111",{"_index":321,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["999888777",{"_index":248,"title":{},"body":{"entities/Request.html":{}}}],["999888777'})@column('text",{"_index":224,"title":{},"body":{"entities/Request.html":{}}}],["__dirname",{"_index":169,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["_configservice",{"_index":137,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["_configservice.get('jwt.jwtsecret",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["_getvalue",{"_index":129,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["_getvalue(key",{"_index":138,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["_requestrepository",{"_index":354,"title":{},"body":{"injectables/RequestService.html":{}}}],["_requestservice",{"_index":297,"title":{},"body":{"controllers/RequestController.html":{}}}],["_reserverepository",{"_index":438,"title":{},"body":{"injectables/ReserveService.html":{}}}],["_reserveservice",{"_index":423,"title":{},"body":{"controllers/ReserveController.html":{}}}],["_spacerepository",{"_index":503,"title":{},"body":{"injectables/SpaceService.html":{}}}],["_spaceservice",{"_index":488,"title":{},"body":{"controllers/SpaceController.html":{}}}],["access",{"_index":635,"title":{},"body":{"index.html":{}}}],["activityname",{"_index":66,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["add",{"_index":586,"title":{},"body":{"index.html":{}}}],["always",{"_index":607,"title":{},"body":{"index.html":{}}}],["api",{"_index":571,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":290,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["apibearerauth('access",{"_index":296,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["apiproperty",{"_index":237,"title":{},"body":{"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{}}}],["apiproperty()@onetomany(undefined",{"_index":461,"title":{},"body":{"entities/Space.html":{}}}],["apiproperty({example",{"_index":205,"title":{},"body":{"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{}}}],["apitags",{"_index":291,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["apitags('request",{"_index":294,"title":{},"body":{"controllers/RequestController.html":{}}}],["apitags('reserve",{"_index":422,"title":{},"body":{"controllers/ReserveController.html":{}}}],["apitags('space",{"_index":487,"title":{},"body":{"controllers/SpaceController.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":247,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["area'})@column('text",{"_index":229,"title":{},"body":{"entities/Request.html":{}}}],["async",{"_index":178,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["authguard",{"_index":292,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["authmodule",{"_index":44,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":647,"title":{},"body":{"properties.html":{}}}],["autoloadentities",{"_index":173,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["await",{"_index":363,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["body",{"_index":278,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["bootstrap",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":642,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":639,"title":{},"body":{"modules.html":{}}}],["building",{"_index":458,"title":{},"body":{"entities/Space.html":{}}}],["built",{"_index":575,"title":{},"body":{"index.html":{}}}],["carlos",{"_index":320,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["carlos@test.com",{"_index":322,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["cascade",{"_index":396,"title":{},"body":{"entities/Reserve.html":{},"entities/Space.html":{}}}],["class",{"_index":41,"title":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":61,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"index.html":{},"overview.html":{}}}],["classroom",{"_index":572,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":45,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":46,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_requestmodule",{"_index":307,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_providers",{"_index":308,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_reservemodule",{"_index":430,"title":{},"body":{"modules/ReserveModule.html":{},"overview.html":{}}}],["cluster_reservemodule_providers",{"_index":431,"title":{},"body":{"modules/ReserveModule.html":{},"overview.html":{}}}],["cluster_spacemodule",{"_index":495,"title":{},"body":{"modules/SpaceModule.html":{},"overview.html":{}}}],["cluster_spacemodule_providers",{"_index":496,"title":{},"body":{"modules/SpaceModule.html":{},"overview.html":{}}}],["code",{"_index":622,"title":{},"body":{"index.html":{}}}],["column",{"_index":240,"title":{},"body":{"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{}}}],["column('date",{"_index":252,"title":{},"body":{"entities/Request.html":{}}}],["column('text",{"_index":245,"title":{},"body":{"entities/Request.html":{},"entities/Space.html":{}}}],["compose",{"_index":599,"title":{},"body":{"index.html":{}}}],["config.service",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["config.service.ts",{"_index":126,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"coverage.html":{}}}],["config.service.ts:15",{"_index":142,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["config.service.ts:6",{"_index":134,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["config.service.ts:9",{"_index":139,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["config/configuration",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":133,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":147,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["constructor",{"_index":131,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["constructor(_configservice",{"_index":132,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(_requestrepository",{"_index":351,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(_reserverepository",{"_index":436,"title":{},"body":{"injectables/ReserveService.html":{}}}],["constructor(_spacerepository",{"_index":501,"title":{},"body":{"injectables/SpaceService.html":{}}}],["constructor(private",{"_index":146,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["container_name",{"_index":614,"title":{},"body":{"index.html":{}}}],["controller",{"_index":254,"title":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{},"coverage.html":{}}}],["controller('request",{"_index":293,"title":{},"body":{"controllers/RequestController.html":{}}}],["controller('reserve",{"_index":421,"title":{},"body":{"controllers/ReserveController.html":{}}}],["controller('space",{"_index":486,"title":{},"body":{"controllers/SpaceController.html":{}}}],["controllers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"overview.html":{}}}],["course",{"_index":103,"title":{},"body":{"classes/CreateReserveDto.html":{},"entities/Reserve.html":{}}}],["coverage",{"_index":526,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":258,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"index.html":{}}}],["create(@body",{"_index":301,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["create(createrequestdto",{"_index":263,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{}}}],["create(createreservedto",{"_index":408,"title":{},"body":{"controllers/ReserveController.html":{},"injectables/ReserveService.html":{}}}],["create(createspacedto",{"_index":472,"title":{},"body":{"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["createrequestdto",{"_index":60,"title":{"classes/CreateRequestDto.html":{}},"body":{"classes/CreateRequestDto.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"classes/UpdateRequestDto.html":{},"coverage.html":{}}}],["createreservedto",{"_index":100,"title":{"classes/CreateReserveDto.html":{}},"body":{"classes/CreateReserveDto.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"classes/UpdateReserveDto.html":{},"coverage.html":{}}}],["createspacedto",{"_index":115,"title":{"classes/CreateSpaceDto.html":{}},"body":{"classes/CreateSpaceDto.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{},"classes/UpdateSpaceDto.html":{},"coverage.html":{}}}],["createtypeormoptions",{"_index":130,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["database",{"_index":166,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["database_autoloadentities=true",{"_index":595,"title":{},"body":{"index.html":{}}}],["database_host=localhost",{"_index":590,"title":{},"body":{"index.html":{}}}],["database_name",{"_index":613,"title":{},"body":{"index.html":{}}}],["database_name=reserve_db",{"_index":592,"title":{},"body":{"index.html":{}}}],["database_password",{"_index":611,"title":{},"body":{"index.html":{}}}],["database_password=password",{"_index":594,"title":{},"body":{"index.html":{}}}],["database_port=port",{"_index":591,"title":{},"body":{"index.html":{}}}],["database_synchronize=true",{"_index":596,"title":{},"body":{"index.html":{}}}],["database_type=postgres",{"_index":589,"title":{},"body":{"index.html":{}}}],["database_username=postgres",{"_index":593,"title":{},"body":{"index.html":{}}}],["databaseconfigservice",{"_index":26,"title":{"injectables/DatabaseConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfigService.html":{},"coverage.html":{}}}],["date",{"_index":86,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/CreateSpaceDto.html":{},"entities/Request.html":{},"entities/Space.html":{}}}],["date('2022",{"_index":323,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["day",{"_index":67,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["db",{"_index":603,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":79,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{}}}],["default",{"_index":319,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["defaultstrategy",{"_index":53,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":81,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["delete",{"_index":279,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["delete(':id",{"_index":272,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["delete(@param('id",{"_index":493,"title":{},"body":{"controllers/SpaceController.html":{}}}],["delete(id",{"_index":474,"title":{},"body":{"controllers/SpaceController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":104,"title":{},"body":{"classes/CreateReserveDto.html":{},"entities/Reserve.html":{},"properties.html":{}}}],["developer",{"_index":250,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["developer'})@column('text",{"_index":235,"title":{},"body":{"entities/Request.html":{}}}],["dfinally",{"_index":624,"title":{},"body":{"index.html":{}}}],["docker",{"_index":598,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":287,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{}}}],["dto/update",{"_index":289,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{}}}],["dtos/create",{"_index":483,"title":{},"body":{"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["dtos/update",{"_index":485,"title":{},"body":{"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["e2e",{"_index":630,"title":{},"body":{"index.html":{}}}],["e2e:watchto",{"_index":632,"title":{},"body":{"index.html":{}}}],["eager",{"_index":463,"title":{},"body":{"entities/Space.html":{}}}],["email",{"_index":68,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["enddate",{"_index":69,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["endhour",{"_index":70,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["engineer",{"_index":246,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["engineer'})@column('text",{"_index":227,"title":{},"body":{"entities/Request.html":{}}}],["entities",{"_index":171,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{},"overview.html":{}}}],["entities/request.entity",{"_index":284,"title":{},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{}}}],["entities/reserve.entity",{"_index":417,"title":{},"body":{"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{}}}],["entities/space.entity",{"_index":482,"title":{},"body":{"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{}}}],["entity",{"_index":201,"title":{"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{}},"body":{"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":172,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["env",{"_index":583,"title":{},"body":{"index.html":{}}}],["env.${key",{"_index":155,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["environment",{"_index":581,"title":{},"body":{"index.html":{}}}],["error",{"_index":153,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["error(`config",{"_index":152,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["example",{"_index":242,"title":{},"body":{"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{},"index.html":{}}}],["export",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{}}}],["exports",{"_index":59,"title":{},"body":{"modules/AuthModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{}}}],["express",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{}}}],["extractjwt",{"_index":185,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":58,"title":{},"body":{"modules/AuthModule.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":316,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{}}}],["findall",{"_index":259,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["findone",{"_index":260,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["findone(@param('id",{"_index":299,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["findone(id",{"_index":268,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["findoneby",{"_index":317,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{}}}],["findoneby(undefined",{"_index":330,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{}}}],["first",{"_index":619,"title":{},"body":{"index.html":{}}}],["follogin",{"_index":631,"title":{},"body":{"index.html":{}}}],["following",{"_index":621,"title":{},"body":{"index.html":{}}}],["for...'})@column",{"_index":387,"title":{},"body":{"entities/Reserve.html":{}}}],["found",{"_index":367,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["function",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":567,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":269,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["getting",{"_index":569,"title":{"index.html":{}},"body":{}}],["group",{"_index":251,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["group'})@column('text",{"_index":207,"title":{},"body":{"entities/Request.html":{}}}],["host",{"_index":158,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["hour",{"_index":105,"title":{},"body":{"classes/CreateReserveDto.html":{},"entities/Reserve.html":{}}}],["http://localhost:/api",{"_index":638,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":188,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["httpexception('invalid",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["httpstatus",{"_index":189,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["httpstatus.unauthorized",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":204,"title":{},"body":{"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["identifier",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":604,"title":{},"body":{"index.html":{}}}],["implements",{"_index":145,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{}}}],["index",{"_index":64,"title":{"index.html":{}},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{}}}],["injectable",{"_index":123,"title":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{},"coverage.html":{}}}],["injectables",{"_index":124,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{},"overview.html":{}}}],["injectrepository",{"_index":361,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["injectrepository(request",{"_index":362,"title":{},"body":{"injectables/RequestService.html":{}}}],["injectrepository(reserve",{"_index":445,"title":{},"body":{"injectables/ReserveService.html":{}}}],["injectrepository(space",{"_index":509,"title":{},"body":{"injectables/SpaceService.html":{}}}],["install",{"_index":577,"title":{},"body":{"index.html":{}}}],["installation",{"_index":576,"title":{},"body":{"index.html":{}}}],["installlibraries",{"_index":579,"title":{},"body":{"index.html":{}}}],["isdatestring",{"_index":87,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["isglobal",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["isnumber",{"_index":112,"title":{},"body":{"classes/CreateReserveDto.html":{}}}],["isstring",{"_index":83,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{}}}],["isstring()@minlength(5",{"_index":80,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["jwt",{"_index":54,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":51,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":47,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["karla",{"_index":398,"title":{},"body":{"entities/Reserve.html":{}}}],["key",{"_index":140,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["license",{"_index":645,"title":{},"body":{"properties.html":{}}}],["load",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["lopez",{"_index":405,"title":{},"body":{"entities/Reserve.html":{}}}],["lopez'})@column",{"_index":399,"title":{},"body":{"entities/Reserve.html":{}}}],["luis",{"_index":221,"title":{},"body":{"entities/Request.html":{}}}],["luis@test.com",{"_index":249,"title":{},"body":{"entities/Request.html":{}}}],["luis@test.com'})@column('text",{"_index":211,"title":{},"body":{"entities/Request.html":{}}}],["manytoone",{"_index":401,"title":{},"body":{"entities/Reserve.html":{}}}],["matching",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.floor(math.random",{"_index":343,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["metadata",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":127,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["migrations",{"_index":168,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["migrations/*{.ts,.js",{"_index":170,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["minlength",{"_index":97,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["minlength(5",{"_index":99,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["miscellaneous",{"_index":566,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["missing",{"_index":154,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["mockrequest",{"_index":315,"title":{},"body":{"classes/RequestRepositoryMock.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/request/request.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/reserve/reserve.module",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/space/space.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["monday",{"_index":253,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["monday'})@column('text",{"_index":209,"title":{},"body":{"entities/Request.html":{}}}],["name",{"_index":71,"title":{},"body":{"classes/CreateRequestDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["need",{"_index":620,"title":{},"body":{"index.html":{}}}],["nest_port=3000docker",{"_index":597,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":404,"title":{},"body":{"entities/Reserve.html":{},"index.html":{}}}],["nestjs'})@column",{"_index":385,"title":{},"body":{"entities/Reserve.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/core",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":519,"title":{},"body":{"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":50,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":238,"title":{},"body":{"entities/Request.html":{},"controllers/RequestController.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/typeorm",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfigService.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"dependencies.html":{},"index.html":{}}}],["new",{"_index":151,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{},"coverage.html":{}}}],["notfoundexception",{"_index":360,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["notfoundexception(`request",{"_index":366,"title":{},"body":{"injectables/RequestService.html":{}}}],["notfoundexception(`reserve",{"_index":448,"title":{},"body":{"injectables/ReserveService.html":{}}}],["notfoundexception(`space",{"_index":512,"title":{},"body":{"injectables/SpaceService.html":{}}}],["npm",{"_index":578,"title":{},"body":{"index.html":{}}}],["number",{"_index":111,"title":{},"body":{"classes/CreateReserveDto.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["object.assign(toupdate",{"_index":372,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["ondelete",{"_index":395,"title":{},"body":{"entities/Reserve.html":{}}}],["onetomany",{"_index":467,"title":{},"body":{"entities/Space.html":{}}}],["optional",{"_index":136,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{},"overview.html":{}}}],["overview",{"_index":643,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":542,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":280,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["param('id",{"_index":303,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["parameters",{"_index":135,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["parseintpipe",{"_index":281,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["partialtype",{"_index":518,"title":{},"body":{"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{}}}],["partialtype(createrequestdto",{"_index":521,"title":{},"body":{"classes/UpdateRequestDto.html":{}}}],["partialtype(createreservedto",{"_index":523,"title":{},"body":{"classes/UpdateReserveDto.html":{}}}],["partialtype(createspacedto",{"_index":525,"title":{},"body":{"classes/UpdateSpaceDto.html":{}}}],["passport",{"_index":187,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":49,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":52,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":184,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":164,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["patch",{"_index":282,"title":{},"body":{"controllers/RequestController.html":{}}}],["patch(':id",{"_index":276,"title":{},"body":{"controllers/RequestController.html":{}}}],["payload",{"_index":183,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":557,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["phone",{"_index":72,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["place",{"_index":118,"title":{},"body":{"classes/CreateSpaceDto.html":{},"entities/Space.html":{}}}],["port",{"_index":160,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["ports",{"_index":608,"title":{},"body":{"index.html":{}}}],["position",{"_index":73,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["post",{"_index":264,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["postgres:/var/lib/postgresql/datarun",{"_index":617,"title":{},"body":{"index.html":{}}}],["postgres:14.3",{"_index":605,"title":{},"body":{"index.html":{}}}],["postgres_db",{"_index":612,"title":{},"body":{"index.html":{}}}],["postgres_password",{"_index":610,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":257,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["primarygeneratedcolumn",{"_index":239,"title":{},"body":{"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{}}}],["private",{"_index":128,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["project",{"_index":585,"title":{},"body":{"index.html":{}}}],["promise",{"_index":266,"title":{},"body":{"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["promise.resolve",{"_index":342,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["promise.resolve([this.mockrequest",{"_index":336,"title":{},"body":{"classes/RequestRepositoryMock.html":{}}}],["promise.resolve([this.request",{"_index":345,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["promise.resolve(this.mockrequest",{"_index":337,"title":{},"body":{"classes/RequestRepositoryMock.html":{}}}],["properties",{"_index":65,"title":{"properties.html":{}},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"entities/Space.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":55,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{}}}],["put",{"_index":416,"title":{},"body":{"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["put(':id",{"_index":414,"title":{},"body":{"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["readonly",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["reflect",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":261,"title":{},"body":{"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["remove(@param(':id",{"_index":428,"title":{},"body":{"controllers/ReserveController.html":{}}}],["remove(@param('id",{"_index":305,"title":{},"body":{"controllers/RequestController.html":{}}}],["remove(id",{"_index":271,"title":{},"body":{"controllers/RequestController.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["repository",{"_index":352,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["repository.mock.ts",{"_index":314,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"coverage.html":{}}}],["repository.mock.ts:20",{"_index":329,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{}}}],["repository.mock.ts:24",{"_index":331,"title":{},"body":{"classes/RequestRepositoryMock.html":{}}}],["repository.mock.ts:27",{"_index":339,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{}}}],["repository.mock.ts:28",{"_index":334,"title":{},"body":{"classes/RequestRepositoryMock.html":{}}}],["repository.mock.ts:31",{"_index":340,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{}}}],["repository.mock.ts:32",{"_index":332,"title":{},"body":{"classes/RequestRepositoryMock.html":{}}}],["repository.mock.ts:37",{"_index":341,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{}}}],["repository.mock.ts:4",{"_index":328,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{}}}],["request",{"_index":202,"title":{"entities/Request.html":{}},"body":{"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"coverage.html":{}}}],["request.controller",{"_index":310,"title":{},"body":{"modules/RequestModule.html":{}}}],["request.dto",{"_index":288,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"classes/UpdateRequestDto.html":{}}}],["request.dto.ts",{"_index":63,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/UpdateRequestDto.html":{},"coverage.html":{}}}],["request.dto.ts:10",{"_index":92,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:14",{"_index":93,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:18",{"_index":91,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:22",{"_index":85,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:26",{"_index":96,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:30",{"_index":82,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:33",{"_index":94,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:36",{"_index":88,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:39",{"_index":84,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:42",{"_index":95,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:45",{"_index":89,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.dto.ts:6",{"_index":90,"title":{},"body":{"classes/CreateRequestDto.html":{}}}],["request.service",{"_index":286,"title":{},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{}}}],["requestcontroller",{"_index":255,"title":{"controllers/RequestController.html":{}},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{},"coverage.html":{}}}],["requestfind",{"_index":347,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{}}}],["requestfind.id",{"_index":349,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{}}}],["requestid",{"_index":346,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{}}}],["requestmodule",{"_index":6,"title":{"modules/RequestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RequestModule.html":{},"modules.html":{},"overview.html":{}}}],["requestrepositorymock",{"_index":312,"title":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{}},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"coverage.html":{}}}],["requestservice",{"_index":285,"title":{"injectables/RequestService.html":{}},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{},"overview.html":{}}}],["requestservicemock",{"_index":375,"title":{"classes/RequestServiceMock.html":{}},"body":{"classes/RequestServiceMock.html":{},"coverage.html":{}}}],["reservation",{"_index":573,"title":{},"body":{"index.html":{}}}],["reserve",{"_index":383,"title":{"entities/Reserve.html":{}},"body":{"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"coverage.html":{},"index.html":{}}}],["reserve.controller",{"_index":433,"title":{},"body":{"modules/ReserveModule.html":{}}}],["reserve.dto",{"_index":420,"title":{},"body":{"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"classes/UpdateReserveDto.html":{}}}],["reserve.dto.ts",{"_index":102,"title":{},"body":{"classes/CreateReserveDto.html":{},"classes/UpdateReserveDto.html":{},"coverage.html":{}}}],["reserve.dto.ts:11",{"_index":108,"title":{},"body":{"classes/CreateReserveDto.html":{}}}],["reserve.dto.ts:14",{"_index":114,"title":{},"body":{"classes/CreateReserveDto.html":{}}}],["reserve.dto.ts:17",{"_index":113,"title":{},"body":{"classes/CreateReserveDto.html":{}}}],["reserve.dto.ts:5",{"_index":110,"title":{},"body":{"classes/CreateReserveDto.html":{}}}],["reserve.dto.ts:8",{"_index":109,"title":{},"body":{"classes/CreateReserveDto.html":{}}}],["reserve.service",{"_index":419,"title":{},"body":{"controllers/ReserveController.html":{},"modules/ReserveModule.html":{}}}],["reserve.space",{"_index":462,"title":{},"body":{"entities/Space.html":{}}}],["reserve/entities/reserve.entity",{"_index":468,"title":{},"body":{"entities/Space.html":{}}}],["reservecontroller",{"_index":406,"title":{"controllers/ReserveController.html":{}},"body":{"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"coverage.html":{}}}],["reservedb",{"_index":615,"title":{},"body":{"index.html":{}}}],["reservemodule",{"_index":8,"title":{"modules/ReserveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReserveModule.html":{},"modules.html":{},"overview.html":{}}}],["reserveservice",{"_index":418,"title":{"injectables/ReserveService.html":{}},"body":{"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"coverage.html":{},"overview.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{},"overview.html":{}}}],["respective",{"_index":587,"title":{},"body":{"index.html":{}}}],["rest",{"_index":574,"title":{},"body":{"index.html":{}}}],["restart",{"_index":606,"title":{},"body":{"index.html":{}}}],["results",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":156,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["returns",{"_index":141,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["rimraf",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["room",{"_index":119,"title":{},"body":{"classes/CreateSpaceDto.html":{},"entities/Space.html":{}}}],["root",{"_index":584,"title":{},"body":{"index.html":{}}}],["run",{"_index":618,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":318,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{}}}],["save(request",{"_index":333,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{}}}],["secretorkey",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":74,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["see",{"_index":633,"title":{},"body":{"index.html":{}}}],["service.mock.ts",{"_index":376,"title":{},"body":{"classes/RequestServiceMock.html":{},"coverage.html":{}}}],["service.mock.ts:22",{"_index":379,"title":{},"body":{"classes/RequestServiceMock.html":{}}}],["service.mock.ts:26",{"_index":380,"title":{},"body":{"classes/RequestServiceMock.html":{}}}],["service.mock.ts:30",{"_index":378,"title":{},"body":{"classes/RequestServiceMock.html":{}}}],["service.mock.ts:37",{"_index":382,"title":{},"body":{"classes/RequestServiceMock.html":{}}}],["service.mock.ts:47",{"_index":381,"title":{},"body":{"classes/RequestServiceMock.html":{}}}],["service.mock.ts:6",{"_index":377,"title":{},"body":{"classes/RequestServiceMock.html":{}}}],["services",{"_index":602,"title":{},"body":{"index.html":{}}}],["session",{"_index":57,"title":{},"body":{"modules/AuthModule.html":{}}}],["software",{"_index":226,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"modules/ReserveModule.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{}}}],["space",{"_index":106,"title":{"entities/Space.html":{}},"body":{"classes/CreateReserveDto.html":{},"entities/Reserve.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"coverage.html":{}}}],["space.controller",{"_index":498,"title":{},"body":{"modules/SpaceModule.html":{}}}],["space.dto",{"_index":484,"title":{},"body":{"controllers/SpaceController.html":{},"injectables/SpaceService.html":{},"classes/UpdateSpaceDto.html":{}}}],["space.dto.ts",{"_index":117,"title":{},"body":{"classes/CreateSpaceDto.html":{},"classes/UpdateSpaceDto.html":{},"coverage.html":{}}}],["space.dto.ts:11",{"_index":120,"title":{},"body":{"classes/CreateSpaceDto.html":{}}}],["space.dto.ts:5",{"_index":121,"title":{},"body":{"classes/CreateSpaceDto.html":{}}}],["space.dto.ts:8",{"_index":122,"title":{},"body":{"classes/CreateSpaceDto.html":{}}}],["space.reserve",{"_index":394,"title":{},"body":{"entities/Reserve.html":{}}}],["space.service",{"_index":481,"title":{},"body":{"controllers/SpaceController.html":{},"modules/SpaceModule.html":{}}}],["space/entities/space.entity",{"_index":402,"title":{},"body":{"entities/Reserve.html":{}}}],["spacecontroller",{"_index":470,"title":{"controllers/SpaceController.html":{}},"body":{"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"coverage.html":{}}}],["spacemodule",{"_index":9,"title":{"modules/SpaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpaceModule.html":{},"modules.html":{},"overview.html":{}}}],["spaceservice",{"_index":480,"title":{"injectables/SpaceService.html":{}},"body":{"controllers/SpaceController.html":{},"modules/SpaceModule.html":{},"injectables/SpaceService.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../main.ts",{"_index":568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/database",{"_index":125,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":48,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":177,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:15",{"_index":182,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:7",{"_index":180,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/request/dto/create",{"_index":62,"title":{},"body":{"classes/CreateRequestDto.html":{},"coverage.html":{}}}],["src/modules/request/dto/update",{"_index":517,"title":{},"body":{"classes/UpdateRequestDto.html":{},"coverage.html":{}}}],["src/modules/request/entities/request.entity",{"_index":335,"title":{},"body":{"classes/RequestRepositoryMock.html":{}}}],["src/modules/request/entities/request.entity.ts",{"_index":203,"title":{},"body":{"entities/Request.html":{},"coverage.html":{}}}],["src/modules/request/entities/request.entity.ts:12",{"_index":223,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:16",{"_index":228,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:20",{"_index":230,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:24",{"_index":225,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:28",{"_index":212,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:32",{"_index":236,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:36",{"_index":208,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:40",{"_index":232,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:44",{"_index":216,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:48",{"_index":210,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:52",{"_index":234,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:56",{"_index":218,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/entities/request.entity.ts:8",{"_index":220,"title":{},"body":{"entities/Request.html":{}}}],["src/modules/request/mocks/request",{"_index":338,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{},"coverage.html":{}}}],["src/modules/request/request.controller.ts",{"_index":256,"title":{},"body":{"controllers/RequestController.html":{},"coverage.html":{}}}],["src/modules/request/request.controller.ts:27",{"_index":267,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:32",{"_index":270,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:37",{"_index":265,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:42",{"_index":277,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.controller.ts:50",{"_index":273,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/modules/request/request.module.ts",{"_index":309,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/modules/request/request.service.ts",{"_index":350,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/modules/request/request.service.ts:15",{"_index":356,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:19",{"_index":357,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:28",{"_index":355,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:32",{"_index":359,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:42",{"_index":358,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/request/request.service.ts:9",{"_index":353,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/modules/reserve/dto/create",{"_index":101,"title":{},"body":{"classes/CreateReserveDto.html":{},"coverage.html":{}}}],["src/modules/reserve/dto/update",{"_index":522,"title":{},"body":{"classes/UpdateReserveDto.html":{},"coverage.html":{}}}],["src/modules/reserve/entities/reserve.entity.ts",{"_index":384,"title":{},"body":{"entities/Reserve.html":{},"coverage.html":{}}}],["src/modules/reserve/entities/reserve.entity.ts:12",{"_index":391,"title":{},"body":{"entities/Reserve.html":{}}}],["src/modules/reserve/entities/reserve.entity.ts:16",{"_index":388,"title":{},"body":{"entities/Reserve.html":{}}}],["src/modules/reserve/entities/reserve.entity.ts:20",{"_index":386,"title":{},"body":{"entities/Reserve.html":{}}}],["src/modules/reserve/entities/reserve.entity.ts:24",{"_index":400,"title":{},"body":{"entities/Reserve.html":{}}}],["src/modules/reserve/entities/reserve.entity.ts:30",{"_index":397,"title":{},"body":{"entities/Reserve.html":{}}}],["src/modules/reserve/entities/reserve.entity.ts:8",{"_index":392,"title":{},"body":{"entities/Reserve.html":{}}}],["src/modules/reserve/reserve.controller.ts",{"_index":407,"title":{},"body":{"controllers/ReserveController.html":{},"coverage.html":{}}}],["src/modules/reserve/reserve.controller.ts:27",{"_index":410,"title":{},"body":{"controllers/ReserveController.html":{}}}],["src/modules/reserve/reserve.controller.ts:32",{"_index":411,"title":{},"body":{"controllers/ReserveController.html":{}}}],["src/modules/reserve/reserve.controller.ts:37",{"_index":409,"title":{},"body":{"controllers/ReserveController.html":{}}}],["src/modules/reserve/reserve.controller.ts:42",{"_index":415,"title":{},"body":{"controllers/ReserveController.html":{}}}],["src/modules/reserve/reserve.controller.ts:50",{"_index":412,"title":{},"body":{"controllers/ReserveController.html":{}}}],["src/modules/reserve/reserve.module.ts",{"_index":432,"title":{},"body":{"modules/ReserveModule.html":{}}}],["src/modules/reserve/reserve.service.ts",{"_index":435,"title":{},"body":{"injectables/ReserveService.html":{},"coverage.html":{}}}],["src/modules/reserve/reserve.service.ts:15",{"_index":440,"title":{},"body":{"injectables/ReserveService.html":{}}}],["src/modules/reserve/reserve.service.ts:19",{"_index":441,"title":{},"body":{"injectables/ReserveService.html":{}}}],["src/modules/reserve/reserve.service.ts:28",{"_index":439,"title":{},"body":{"injectables/ReserveService.html":{}}}],["src/modules/reserve/reserve.service.ts:32",{"_index":444,"title":{},"body":{"injectables/ReserveService.html":{}}}],["src/modules/reserve/reserve.service.ts:39",{"_index":442,"title":{},"body":{"injectables/ReserveService.html":{}}}],["src/modules/reserve/reserve.service.ts:9",{"_index":437,"title":{},"body":{"injectables/ReserveService.html":{}}}],["src/modules/space/dtos/create",{"_index":116,"title":{},"body":{"classes/CreateSpaceDto.html":{},"coverage.html":{}}}],["src/modules/space/dtos/update",{"_index":524,"title":{},"body":{"classes/UpdateSpaceDto.html":{},"coverage.html":{}}}],["src/modules/space/entities/space.entity.ts",{"_index":453,"title":{},"body":{"entities/Space.html":{},"coverage.html":{}}}],["src/modules/space/entities/space.entity.ts:12",{"_index":460,"title":{},"body":{"entities/Space.html":{}}}],["src/modules/space/entities/space.entity.ts:16",{"_index":466,"title":{},"body":{"entities/Space.html":{}}}],["src/modules/space/entities/space.entity.ts:20",{"_index":456,"title":{},"body":{"entities/Space.html":{}}}],["src/modules/space/entities/space.entity.ts:27",{"_index":464,"title":{},"body":{"entities/Space.html":{}}}],["src/modules/space/entities/space.entity.ts:8",{"_index":457,"title":{},"body":{"entities/Space.html":{}}}],["src/modules/space/space.controller.ts",{"_index":471,"title":{},"body":{"controllers/SpaceController.html":{},"coverage.html":{}}}],["src/modules/space/space.controller.ts:27",{"_index":476,"title":{},"body":{"controllers/SpaceController.html":{}}}],["src/modules/space/space.controller.ts:32",{"_index":477,"title":{},"body":{"controllers/SpaceController.html":{}}}],["src/modules/space/space.controller.ts:37",{"_index":473,"title":{},"body":{"controllers/SpaceController.html":{}}}],["src/modules/space/space.controller.ts:42",{"_index":479,"title":{},"body":{"controllers/SpaceController.html":{}}}],["src/modules/space/space.controller.ts:50",{"_index":475,"title":{},"body":{"controllers/SpaceController.html":{}}}],["src/modules/space/space.module.ts",{"_index":497,"title":{},"body":{"modules/SpaceModule.html":{}}}],["src/modules/space/space.service.ts",{"_index":500,"title":{},"body":{"injectables/SpaceService.html":{},"coverage.html":{}}}],["src/modules/space/space.service.ts:15",{"_index":505,"title":{},"body":{"injectables/SpaceService.html":{}}}],["src/modules/space/space.service.ts:19",{"_index":506,"title":{},"body":{"injectables/SpaceService.html":{}}}],["src/modules/space/space.service.ts:28",{"_index":504,"title":{},"body":{"injectables/SpaceService.html":{}}}],["src/modules/space/space.service.ts:32",{"_index":508,"title":{},"body":{"injectables/SpaceService.html":{}}}],["src/modules/space/space.service.ts:38",{"_index":507,"title":{},"body":{"injectables/SpaceService.html":{}}}],["src/modules/space/space.service.ts:9",{"_index":502,"title":{},"body":{"injectables/SpaceService.html":{}}}],["start",{"_index":625,"title":{},"body":{"index.html":{}}}],["start:devtest",{"_index":626,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":75,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["started",{"_index":570,"title":{"index.html":{}},"body":{}}],["starthour",{"_index":76,"title":{},"body":{"classes/CreateRequestDto.html":{},"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["statements",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["strategy",{"_index":186,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":78,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"entities/Request.html":{},"entities/Reserve.html":{},"entities/Space.html":{}}}],["study",{"_index":206,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["super",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":640,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":641,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":636,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":175,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["table",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["teacher",{"_index":107,"title":{},"body":{"classes/CreateReserveDto.html":{},"entities/Reserve.html":{}}}],["test",{"_index":628,"title":{},"body":{"index.html":{}}}],["test/request/mocks/request",{"_index":313,"title":{},"body":{"classes/RequestRepositoryMock.html":{},"coverage.html":{}}}],["test:covopen",{"_index":634,"title":{},"body":{"index.html":{}}}],["test:watchto",{"_index":629,"title":{},"body":{"index.html":{}}}],["this._configservice.get(key",{"_index":149,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._getvalue('database_autoloadentities",{"_index":174,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._getvalue('database_host",{"_index":159,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._getvalue('database_name",{"_index":167,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._getvalue('database_password",{"_index":165,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._getvalue('database_port",{"_index":161,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._getvalue('database_synchronize",{"_index":176,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._getvalue('database_type",{"_index":157,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._getvalue('database_user",{"_index":163,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["this._requestrepository.find",{"_index":364,"title":{},"body":{"injectables/RequestService.html":{}}}],["this._requestrepository.findoneby",{"_index":365,"title":{},"body":{"injectables/RequestService.html":{}}}],["this._requestrepository.remove(request",{"_index":374,"title":{},"body":{"injectables/RequestService.html":{}}}],["this._requestrepository.save(createrequestdto",{"_index":368,"title":{},"body":{"injectables/RequestService.html":{}}}],["this._requestrepository.save(updated",{"_index":373,"title":{},"body":{"injectables/RequestService.html":{}}}],["this._requestservice.create(createrequestdto",{"_index":302,"title":{},"body":{"controllers/RequestController.html":{}}}],["this._requestservice.findall",{"_index":298,"title":{},"body":{"controllers/RequestController.html":{}}}],["this._requestservice.findone(+id",{"_index":300,"title":{},"body":{"controllers/RequestController.html":{}}}],["this._requestservice.remove(id",{"_index":306,"title":{},"body":{"controllers/RequestController.html":{}}}],["this._requestservice.update(+id",{"_index":304,"title":{},"body":{"controllers/RequestController.html":{}}}],["this._reserverepository.delete(reserve",{"_index":452,"title":{},"body":{"injectables/ReserveService.html":{}}}],["this._reserverepository.find",{"_index":446,"title":{},"body":{"injectables/ReserveService.html":{}}}],["this._reserverepository.findoneby",{"_index":447,"title":{},"body":{"injectables/ReserveService.html":{}}}],["this._reserverepository.save(createreservedto",{"_index":449,"title":{},"body":{"injectables/ReserveService.html":{}}}],["this._reserverepository.save(updatedreserve",{"_index":451,"title":{},"body":{"injectables/ReserveService.html":{}}}],["this._reserveservice.create(createreservedto",{"_index":426,"title":{},"body":{"controllers/ReserveController.html":{}}}],["this._reserveservice.findall",{"_index":424,"title":{},"body":{"controllers/ReserveController.html":{}}}],["this._reserveservice.findone(id",{"_index":425,"title":{},"body":{"controllers/ReserveController.html":{}}}],["this._reserveservice.remove(id",{"_index":429,"title":{},"body":{"controllers/ReserveController.html":{}}}],["this._reserveservice.update(id",{"_index":427,"title":{},"body":{"controllers/ReserveController.html":{}}}],["this._spacerepository.find",{"_index":510,"title":{},"body":{"injectables/SpaceService.html":{}}}],["this._spacerepository.findoneby",{"_index":511,"title":{},"body":{"injectables/SpaceService.html":{}}}],["this._spacerepository.remove(space",{"_index":516,"title":{},"body":{"injectables/SpaceService.html":{}}}],["this._spacerepository.save(createspacedto",{"_index":513,"title":{},"body":{"injectables/SpaceService.html":{}}}],["this._spacerepository.save(updatedspace",{"_index":515,"title":{},"body":{"injectables/SpaceService.html":{}}}],["this._spaceservice.create(createspacedto",{"_index":491,"title":{},"body":{"controllers/SpaceController.html":{}}}],["this._spaceservice.findall",{"_index":489,"title":{},"body":{"controllers/SpaceController.html":{}}}],["this._spaceservice.findone(id",{"_index":490,"title":{},"body":{"controllers/SpaceController.html":{}}}],["this._spaceservice.remove(id",{"_index":494,"title":{},"body":{"controllers/SpaceController.html":{}}}],["this._spaceservice.update(id",{"_index":492,"title":{},"body":{"controllers/SpaceController.html":{}}}],["this.findone(id",{"_index":370,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["this.request",{"_index":348,"title":{},"body":{"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["throw",{"_index":150,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["token",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["torres",{"_index":244,"title":{},"body":{"entities/Request.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["torres'})@column('text",{"_index":222,"title":{},"body":{"entities/Request.html":{}}}],["toupdate",{"_index":369,"title":{},"body":{"injectables/RequestService.html":{},"injectables/ReserveService.html":{},"injectables/SpaceService.html":{}}}],["transformer",{"_index":550,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["true",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"entities/Space.html":{}}}],["type",{"_index":77,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"injectables/DatabaseConfigService.html":{},"injectables/JwtStrategy.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"entities/Reserve.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{},"coverage.html":{}}}],["typeorm",{"_index":241,"title":{},"body":{"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Reserve.html":{},"injectables/ReserveService.html":{},"entities/Space.html":{},"injectables/SpaceService.html":{},"index.html":{}}}],["typeormmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{}}}],["typeormmodule.forfeature([request",{"_index":311,"title":{},"body":{"modules/RequestModule.html":{}}}],["typeormmodule.forfeature([reserve",{"_index":434,"title":{},"body":{"modules/ReserveModule.html":{}}}],["typeormmodule.forfeature([space",{"_index":499,"title":{},"body":{"modules/SpaceModule.html":{}}}],["typeormmodule.forrootasync",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":143,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["typeormoptionsfactory",{"_index":144,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["types",{"_index":520,"title":{},"body":{"classes/UpdateRequestDto.html":{},"classes/UpdateReserveDto.html":{},"classes/UpdateSpaceDto.html":{},"dependencies.html":{}}}],["unit",{"_index":627,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":443,"title":{},"body":{"injectables/ReserveService.html":{},"controllers/SpaceController.html":{}}}],["unlicensed",{"_index":646,"title":{},"body":{"properties.html":{}}}],["up",{"_index":623,"title":{},"body":{"index.html":{}}}],["update",{"_index":262,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["update(id",{"_index":274,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"controllers/SpaceController.html":{},"injectables/SpaceService.html":{}}}],["updated",{"_index":371,"title":{},"body":{"injectables/RequestService.html":{}}}],["updatedreserve",{"_index":450,"title":{},"body":{"injectables/ReserveService.html":{}}}],["updatedspace",{"_index":514,"title":{},"body":{"injectables/SpaceService.html":{}}}],["updaterequestdto",{"_index":275,"title":{"classes/UpdateRequestDto.html":{}},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"classes/RequestServiceMock.html":{},"classes/UpdateRequestDto.html":{},"coverage.html":{}}}],["updatereservedto",{"_index":413,"title":{"classes/UpdateReserveDto.html":{}},"body":{"controllers/ReserveController.html":{},"injectables/ReserveService.html":{},"classes/UpdateReserveDto.html":{},"coverage.html":{}}}],["updatespacedto",{"_index":478,"title":{"classes/UpdateSpaceDto.html":{}},"body":{"controllers/SpaceController.html":{},"injectables/SpaceService.html":{},"classes/UpdateSpaceDto.html":{},"coverage.html":{}}}],["url",{"_index":637,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":580,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":283,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["useguards(authguard('jwt",{"_index":295,"title":{},"body":{"controllers/RequestController.html":{},"controllers/ReserveController.html":{},"controllers/SpaceController.html":{}}}],["user",{"_index":56,"title":{},"body":{"modules/AuthModule.html":{}}}],["username",{"_index":162,"title":{},"body":{"injectables/DatabaseConfigService.html":{}}}],["validate",{"_index":179,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":181,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":98,"title":{},"body":{"classes/CreateRequestDto.html":{},"classes/CreateReserveDto.html":{},"classes/CreateSpaceDto.html":{},"dependencies.html":{}}}],["validators",{"_index":553,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["value",{"_index":148,"title":{},"body":{"injectables/DatabaseConfigService.html":{},"classes/RequestRepositoryMock.html":{},"classes/RequestRepositoryMock-1.html":{},"classes/RequestServiceMock.html":{}}}],["values",{"_index":588,"title":{},"body":{"index.html":{}}}],["variables",{"_index":582,"title":{},"body":{"index.html":{}}}],["version",{"_index":600,"title":{},"body":{"index.html":{},"properties.html":{}}}],["volumes",{"_index":616,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RequestModule.html":{},"modules/ReserveModule.html":{},"modules/SpaceModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nRequestModule->AppModule\n\n\n\n\n\nReserveModule\n\nReserveModule\n\nAppModule -->\n\nReserveModule->AppModule\n\n\n\n\n\nSpaceModule\n\nSpaceModule\n\nAppModule -->\n\nSpaceModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RequestModule\n                        \n                        \n                            ReserveModule\n                        \n                        \n                            SpaceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport configuration from './config/configuration';\nimport { DatabaseConfigService } from './config/database-config.service';\nimport { RequestModule } from './modules/request/request.module';\nimport { ReserveModule } from './modules/reserve/reserve.module';\nimport { SpaceModule } from './modules/space/space.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [configuration],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfigService,\n    }),\n    RequestModule,\n    ReserveModule,\n    SpaceModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n  ],\n  controllers: [],\n  providers: [JwtStrategy],\n  exports: [PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRequestDto.html":{"url":"classes/CreateRequestDto.html","title":"class - CreateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/dto/create-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activityName\n                            \n                            \n                                day\n                            \n                            \n                                email\n                            \n                            \n                                endDate\n                            \n                            \n                                endHour\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                position\n                            \n                            \n                                section\n                            \n                            \n                                startDate\n                            \n                            \n                                startHour\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        section\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/dto/create-request.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, IsDateString } from 'class-validator';\n\nexport class CreateRequestDto {\n  @IsString()\n  @MinLength(5)\n  name: string;\n\n  @IsString()\n  @MinLength(5)\n  position: string;\n\n  @IsString()\n  @MinLength(5)\n  section: string;\n\n  @IsString()\n  @MinLength(5)\n  phone: string;\n\n  @IsString()\n  @MinLength(5)\n  email: string;\n\n  @IsString()\n  @MinLength(5)\n  type: string;\n\n  @IsString()\n  @MinLength(5)\n  activityName: string;\n\n  @IsDateString()\n  startDate: Date;\n\n  @IsDateString()\n  endDate: Date;\n\n  @IsString()\n  day: string;\n\n  @IsString()\n  startHour: string;\n\n  @IsString()\n  endHour: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReserveDto.html":{"url":"classes/CreateReserveDto.html","title":"class - CreateReserveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReserveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reserve/dto/create-reserve.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                description\n                            \n                            \n                                hour\n                            \n                            \n                                space\n                            \n                            \n                                teacher\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/dto/create-reserve.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/dto/create-reserve.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/dto/create-reserve.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        space\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/dto/create-reserve.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/dto/create-reserve.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNumber } from 'class-validator';\n\nexport class CreateReserveDto {\n  @IsString()\n  hour: string;\n\n  @IsString()\n  description: string;\n\n  @IsString()\n  course: string;\n\n  @IsString()\n  teacher: string;\n\n  @IsNumber()\n  space: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSpaceDto.html":{"url":"classes/CreateSpaceDto.html","title":"class - CreateSpaceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSpaceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/space/dtos/create-space.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                place\n                            \n                            \n                                room\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/space/dtos/create-space.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        place\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/space/dtos/create-space.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/space/dtos/create-space.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateSpaceDto {\n  @IsString()\n  place: string;\n\n  @IsString()\n  room: string;\n\n  @IsString()\n  date: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfigService.html":{"url":"injectables/DatabaseConfigService.html","title":"injectable - DatabaseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/database-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getValue\n                            \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/database-config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/config/database-config.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/database-config.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\n\n@Injectable()\nexport class DatabaseConfigService implements TypeOrmOptionsFactory {\n  constructor(private _configService: ConfigService) {}\n\n  private _getValue(key: string): string | any {\n    const value = this._configService.get(key);\n    if (!value) throw new Error(`Config error: missing env.${key}`);\n    return value;\n  }\n\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: this._getValue('DATABASE_TYPE'),\n      host: this._getValue('DATABASE_HOST'),\n      port: +this._getValue('DATABASE_PORT'),\n      username: this._getValue('DATABASE_USER'),\n      password: this._getValue('DATABASE_PASSWORD'),\n      database: this._getValue('DATABASE_NAME'),\n      migrations: [__dirname + '/migrations/*{.ts,.js}'],\n      entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n      autoLoadEntities: this._getValue('DATABASE_AUTOLOADENTITIES'),\n      synchronize: this._getValue('DATABASE_SYNCHRONIZE'),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly _configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: _configService.get('jwt.jwtSecret'),\n    });\n  }\n\n  async validate(payload: any) {\n    if (!payload) {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Request.html":{"url":"entities/Request.html","title":"entity - Request","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/entities/request.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activityName\n                            \n                            \n                                day\n                            \n                            \n                                email\n                            \n                            \n                                endDate\n                            \n                            \n                                endHour\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                position\n                            \n                            \n                                section\n                            \n                            \n                                startDate\n                            \n                            \n                                startHour\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'study group'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Monday'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'luis@test.com'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2022-12-12'})@Column('date')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Luis Torres'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '999888777'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Software engineer'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        section\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'IT Area'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2022-10-12'})@Column('date')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '10'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Developer'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/request/entities/request.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class Request {\n  @ApiProperty({ example: 1 })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: 'Luis Torres' })\n  @Column('text')\n  name: string;\n\n  @ApiProperty({ example: 'Software engineer' })\n  @Column('text')\n  position: string;\n\n  @ApiProperty({ example: 'IT Area' })\n  @Column('text')\n  section: string;\n\n  @ApiProperty({ example: '999888777' })\n  @Column('text')\n  phone: string;\n\n  @ApiProperty({ example: 'luis@test.com' })\n  @Column('text')\n  email: string;\n\n  @ApiProperty({ example: 'Developer' })\n  @Column('text')\n  type: string;\n\n  @ApiProperty({ example: 'study group' })\n  @Column('text')\n  activityName: string;\n\n  @ApiProperty({ example: '2022-10-12' })\n  @Column('date')\n  startDate: Date;\n\n  @ApiProperty({ example: '2022-12-12' })\n  @Column('date')\n  endDate: Date;\n\n  @ApiProperty({ example: 'Monday' })\n  @Column('text')\n  day: string;\n\n  @ApiProperty({ example: '10' })\n  @Column('text')\n  startHour: string;\n\n  @ApiProperty({ example: '12' })\n  @Column('text')\n  endHour: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RequestController.html":{"url":"controllers/RequestController.html","title":"controller - RequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                request\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createRequestDto: CreateRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                CreateRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateRequestDto: UpdateRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/request/request.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRequestDto\n                                    \n                                                UpdateRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { Request } from './entities/request.entity';\nimport { RequestService } from './request.service';\nimport { CreateRequestDto } from './dto/create-request.dto';\nimport { UpdateRequestDto } from './dto/update-request.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('request')\n@ApiTags('Request')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth('access-token')\nexport class RequestController {\n  constructor(private readonly _requestService: RequestService) {}\n\n  @Get()\n  findAll(): Promise {\n    return this._requestService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number): Promise {\n    return this._requestService.findOne(+id);\n  }\n\n  @Post()\n  create(@Body() createRequestDto: CreateRequestDto): Promise {\n    return this._requestService.create(createRequestDto);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateRequestDto: UpdateRequestDto,\n  ): Promise {\n    return this._requestService.update(+id, updateRequestDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id', ParseIntPipe) id: number): Promise {\n    return this._requestService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_providers\n\n\n\n\nRequestService\n\nRequestService\n\n\n\nRequestModule\n\nRequestModule\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/request/request.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RequestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RequestController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RequestController } from './request.controller';\nimport { RequestService } from './request.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Request } from './entities/request.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Request])],\n  controllers: [RequestController],\n  providers: [RequestService],\n})\nexport class RequestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestRepositoryMock.html":{"url":"classes/RequestRepositoryMock.html","title":"class - RequestRepositoryMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestRepositoryMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/request/mocks/request-repository.mock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mockRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                findOneBy\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mockRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 1,\n    name: 'Carlos Torres',\n    position: 'Software engineer',\n    section: 'IT Area',\n    phone: '999888111',\n    email: 'carlos@test.com',\n    type: 'Developer',\n    activityName: 'Study Group',\n    startDate: new Date('2022-12-15'),\n    endDate: new Date('2022-12-18'),\n    day: 'Monday',\n    startHour: '5',\n    endHour: '9',\n  }\n                    \n                \n                    \n                        \n                                Defined in test/request/mocks/request-repository.mock.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind()\n                \n            \n\n\n            \n                \n                    Defined in test/request/mocks/request-repository.mock.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(undefined)\n                \n            \n\n\n            \n                \n                    Defined in test/request/mocks/request-repository.mock.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Defined in test/request/mocks/request-repository.mock.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in test/request/mocks/request-repository.mock.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from '../../../src/modules/request/entities/request.entity';\n\nexport class RequestRepositoryMock {\n  mockRequest: Request = {\n    id: 1,\n    name: 'Carlos Torres',\n    position: 'Software engineer',\n    section: 'IT Area',\n    phone: '999888111',\n    email: 'carlos@test.com',\n    type: 'Developer',\n    activityName: 'Study Group',\n    startDate: new Date('2022-12-15'),\n    endDate: new Date('2022-12-18'),\n    day: 'Monday',\n    startHour: '5',\n    endHour: '9',\n  };\n\n  find(): Promise {\n    return Promise.resolve([this.mockRequest]);\n  }\n\n  findOneBy({ id }): Promise {\n    return Promise.resolve(this.mockRequest);\n  }\n\n  save(request: Request): Promise {\n    return Promise.resolve(this.mockRequest);\n  }\n\n  remove() {\n    return Promise.resolve(this.mockRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestRepositoryMock-1.html":{"url":"classes/RequestRepositoryMock-1.html","title":"class - RequestRepositoryMock-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestRepositoryMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/mocks/request-repository.mock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                findOneBy\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 1,\n    name: 'Carlos Torres',\n    position: 'Software engineer',\n    section: 'IT Area',\n    phone: '999888111',\n    email: 'carlos@test.com',\n    type: 'Developer',\n    activityName: 'Study Group',\n    startDate: new Date('2022-12-15'),\n    endDate: new Date('2022-12-18'),\n    day: 'Monday',\n    startHour: '5',\n    endHour: '9',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/modules/request/mocks/request-repository.mock.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-repository.mock.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-repository.mock.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-repository.mock.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-repository.mock.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from '../entities/request.entity';\n\nexport class RequestRepositoryMock {\n  request: Request = {\n    id: 1,\n    name: 'Carlos Torres',\n    position: 'Software engineer',\n    section: 'IT Area',\n    phone: '999888111',\n    email: 'carlos@test.com',\n    type: 'Developer',\n    activityName: 'Study Group',\n    startDate: new Date('2022-12-15'),\n    endDate: new Date('2022-12-18'),\n    day: 'Monday',\n    startHour: '5',\n    endHour: '9',\n  };\n\n  save(request: Request) {\n    return Promise.resolve({\n      id: Math.floor(Math.random() * (1000 - 1) + 1),\n      ...request,\n    });\n  }\n\n  find(): Promise {\n    return Promise.resolve([this.request]);\n  }\n\n  findOneBy({ id: requestId }): Promise {\n    const requestFind = this.request;\n    requestFind.id = requestId;\n    return Promise.resolve({ ...requestFind });\n  }\n\n  remove(id: number): Promise {\n    return Promise.resolve({ ...this.request });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_requestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/request/request.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _requestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRequestDto: CreateRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                CreateRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateRequestDto: UpdateRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/request.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRequestDto\n                                    \n                                                UpdateRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Request } from './entities/request.entity';\nimport { CreateRequestDto } from './dto/create-request.dto';\nimport { UpdateRequestDto } from './dto/update-request.dto';\n\n@Injectable()\nexport class RequestService {\n  constructor(\n    @InjectRepository(Request)\n    private readonly _requestRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this._requestRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const request = await this._requestRepository.findOneBy({ id });\n    if (!request) {\n      throw new NotFoundException(`Request with id \"${id}\" not found`);\n    }\n\n    return request;\n  }\n\n  async create(createRequestDto: CreateRequestDto): Promise {\n    return await this._requestRepository.save(createRequestDto);\n  }\n\n  async update(\n    id: number,\n    updateRequestDto: UpdateRequestDto,\n  ): Promise {\n    const toUpdate = await this.findOne(id);\n    const updated = Object.assign(toUpdate, updateRequestDto);\n\n    return await this._requestRepository.save(updated);\n  }\n\n  async remove(id: number): Promise {\n    const request = await this.findOne(id);\n    return await this._requestRepository.remove(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestServiceMock.html":{"url":"classes/RequestServiceMock.html","title":"class - RequestServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/mocks/request-service.mock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 1,\n    name: 'Carlos Torres',\n    position: 'Software engineer',\n    section: 'IT Area',\n    phone: '999888111',\n    email: 'carlos@test.com',\n    type: 'Developer',\n    activityName: 'Study Group',\n    startDate: new Date('2022-12-15'),\n    endDate: new Date('2022-12-18'),\n    day: 'Monday',\n    startHour: '5',\n    endHour: '9',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/modules/request/mocks/request-service.mock.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRequestDto: CreateRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-service.mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRequestDto\n                                    \n                                                CreateRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-service.mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-service.mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-service.mock.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateRequestDto: UpdateRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/request/mocks/request-service.mock.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRequestDto\n                                    \n                                                UpdateRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateRequestDto } from '../dto/create-request.dto';\nimport { UpdateRequestDto } from '../dto/update-request.dto';\nimport { Request } from '../entities/request.entity';\n\nexport class RequestServiceMock {\n  request: Request = {\n    id: 1,\n    name: 'Carlos Torres',\n    position: 'Software engineer',\n    section: 'IT Area',\n    phone: '999888111',\n    email: 'carlos@test.com',\n    type: 'Developer',\n    activityName: 'Study Group',\n    startDate: new Date('2022-12-15'),\n    endDate: new Date('2022-12-18'),\n    day: 'Monday',\n    startHour: '5',\n    endHour: '9',\n  };\n\n  async findAll(): Promise {\n    return Promise.resolve([this.request]);\n  }\n\n  async findOne(id: number): Promise {\n    return Promise.resolve({ ...this.request });\n  }\n\n  async create(createRequestDto: CreateRequestDto): Promise {\n    return Promise.resolve({\n      id: Math.floor(Math.random() * (1000 - 1) + 1),\n      ...createRequestDto,\n    }) as Promise;\n  }\n\n  async update(\n    id: number,\n    updateRequestDto: UpdateRequestDto,\n  ): Promise {\n    return Promise.resolve({\n      id,\n      ...updateRequestDto,\n    }) as Promise;\n  }\n\n  async remove(): Promise {\n    return Promise.resolve({ ...this.request });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Reserve.html":{"url":"entities/Reserve.html","title":"entity - Reserve","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Reserve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reserve/entities/reserve.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                description\n                            \n                            \n                                hour\n                            \n                            \n                                id\n                            \n                            \n                                space\n                            \n                            \n                                teacher\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'NestJS'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/entities/reserve.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Reserve for...'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/entities/reserve.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '09:00 - 12:00'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/entities/reserve.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/entities/reserve.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        space\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@ManyToOne(undefined, space => space.reserve, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/entities/reserve.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Karla Lopez'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reserve/entities/reserve.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { Space } from '../../space/entities/space.entity';\n\n@Entity()\nexport class Reserve {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: '09:00 - 12:00' })\n  @Column()\n  hour: string;\n\n  @ApiProperty({ example: 'Reserve for...' })\n  @Column()\n  description: string;\n\n  @ApiProperty({ example: 'NestJS' })\n  @Column()\n  course: string;\n\n  @ApiProperty({ example: 'Karla Lopez' })\n  @Column()\n  teacher: string;\n\n  @ApiProperty({ example: 1 })\n  @ManyToOne(() => Space, (space) => space.reserve, {\n    onDelete: 'CASCADE',\n  })\n  space: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReserveController.html":{"url":"controllers/ReserveController.html","title":"controller - ReserveController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReserveController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reserve/reserve.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reserve\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createReserveDto: CreateReserveDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/reserve/reserve.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReserveDto\n                                    \n                                                CreateReserveDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/reserve/reserve.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/reserve/reserve.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/reserve/reserve.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateReserveDto: UpdateReserveDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/reserve/reserve.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReserveDto\n                                    \n                                                UpdateReserveDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { Reserve } from './entities/reserve.entity';\nimport { ReserveService } from './reserve.service';\nimport { CreateReserveDto } from './dto/create-reserve.dto';\nimport { UpdateReserveDto } from './dto/update-reserve.dto';\nimport { ApiTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('reserve')\n@ApiTags('Reserve')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth('access-token')\nexport class ReserveController {\n  constructor(private readonly _reserveService: ReserveService) {}\n\n  @Get()\n  findAll(): Promise {\n    return this._reserveService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseIntPipe) id: number): Promise {\n    return this._reserveService.findOne(id);\n  }\n\n  @Post()\n  create(@Body() createReserveDto: CreateReserveDto): Promise {\n    return this._reserveService.create(createReserveDto);\n  }\n\n  @Put(':id')\n  update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateReserveDto: UpdateReserveDto,\n  ) {\n    return this._reserveService.update(id, updateReserveDto);\n  }\n\n  @Delete(':id')\n  remove(@Param(':id', ParseIntPipe) id: number) {\n    return this._reserveService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReserveModule.html":{"url":"modules/ReserveModule.html","title":"module - ReserveModule","body":"\n                   \n\n\n\n\n    Modules\n    ReserveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReserveModule\n\n\n\ncluster_ReserveModule_providers\n\n\n\n\nReserveService\n\nReserveService\n\n\n\nReserveModule\n\nReserveModule\n\nReserveModule -->\n\nReserveService->ReserveModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/reserve/reserve.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReserveService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReserveController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReserveController } from './reserve.controller';\nimport { ReserveService } from './reserve.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Reserve } from './entities/reserve.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Reserve])],\n  controllers: [ReserveController],\n  providers: [ReserveService],\n  exports: [TypeOrmModule],\n})\nexport class ReserveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReserveService.html":{"url":"injectables/ReserveService.html","title":"injectable - ReserveService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReserveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reserve/reserve.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_reserveRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/reserve/reserve.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _reserveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createReserveDto: CreateReserveDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/reserve/reserve.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReserveDto\n                                    \n                                                CreateReserveDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/reserve/reserve.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/reserve/reserve.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/reserve/reserve.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateReserveDto: UpdateReserveDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/reserve/reserve.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReserveDto\n                                    \n                                                UpdateReserveDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Reserve } from './entities/reserve.entity';\nimport { CreateReserveDto } from './dto/create-reserve.dto';\nimport { UpdateReserveDto } from './dto/update-reserve.dto';\n\n@Injectable()\nexport class ReserveService {\n  constructor(\n    @InjectRepository(Reserve)\n    private readonly _reserveRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this._reserveRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const reserve = await this._reserveRepository.findOneBy({ id });\n    if (!reserve) {\n      throw new NotFoundException(`Reserve with id \"${id}\" not found`);\n    }\n\n    return reserve;\n  }\n\n  async create(createReserveDto: CreateReserveDto): Promise {\n    return await this._reserveRepository.save(createReserveDto);\n  }\n\n  async update(id: number, updateReserveDto: UpdateReserveDto) {\n    const toUpdate = await this.findOne(id);\n    const updatedReserve = Object.assign(toUpdate, updateReserveDto);\n\n    return await this._reserveRepository.save(updatedReserve);\n  }\n\n  async remove(id: number) {\n    const reserve = await this.findOne(id);\n    return await this._reserveRepository.delete(reserve);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Space.html":{"url":"entities/Space.html","title":"entity - Space","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/space/entities/space.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                place\n                            \n                            \n                                reserve\n                            \n                            \n                                room\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2022-05-19'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/space/entities/space.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/space/entities/space.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        place\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Building 1'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/space/entities/space.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reserve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reserve[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@OneToMany(undefined, reserve => reserve.space, {eager: true, cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/space/entities/space.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Room 5'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/space/entities/space.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { Reserve } from '../../reserve/entities/reserve.entity';\n\n@Entity()\nexport class Space {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: 'Building 1' })\n  @Column('text')\n  place: string;\n\n  @ApiProperty({ example: 'Room 5' })\n  @Column('text')\n  room: string;\n\n  @ApiProperty({ example: '2022-05-19' })\n  @Column('text')\n  date: string;\n\n  @ApiProperty()\n  @OneToMany(() => Reserve, (reserve) => reserve.space, {\n    eager: true,\n    cascade: true,\n  })\n  reserve: Reserve[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SpaceController.html":{"url":"controllers/SpaceController.html","title":"controller - SpaceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SpaceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/space/space.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                space\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSpaceDto: CreateSpaceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/space/space.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSpaceDto\n                                    \n                                                CreateSpaceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/space/space.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/space/space.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/space/space.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateSpaceDto: UpdateSpaceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/space/space.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSpaceDto\n                                    \n                                                UpdateSpaceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { SpaceService } from './space.service';\nimport { Space } from './entities/space.entity';\nimport { CreateSpaceDto } from './dtos/create-space.dto';\nimport { UpdateSpaceDto } from './dtos/update-space.dto';\nimport { ApiTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('space')\n@ApiTags('Space')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth('access-token')\nexport class SpaceController {\n  constructor(private readonly _spaceService: SpaceService) {}\n\n  @Get()\n  async findAll(): Promise {\n    return this._spaceService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id', ParseIntPipe) id: number): Promise {\n    return this._spaceService.findOne(id);\n  }\n\n  @Post()\n  async create(@Body() createSpaceDto: CreateSpaceDto): Promise {\n    return this._spaceService.create(createSpaceDto);\n  }\n\n  @Put(':id')\n  async update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateSpaceDto: UpdateSpaceDto,\n  ) {\n    return this._spaceService.update(id, updateSpaceDto);\n  }\n\n  @Delete(':id')\n  async delete(@Param('id', ParseIntPipe) id: number): Promise {\n    return this._spaceService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpaceModule.html":{"url":"modules/SpaceModule.html","title":"module - SpaceModule","body":"\n                   \n\n\n\n\n    Modules\n    SpaceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpaceModule\n\n\n\ncluster_SpaceModule_providers\n\n\n\n\nSpaceService\n\nSpaceService\n\n\n\nSpaceModule\n\nSpaceModule\n\nSpaceModule -->\n\nSpaceService->SpaceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/space/space.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SpaceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SpaceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Space } from './entities/space.entity';\nimport { SpaceController } from './space.controller';\nimport { SpaceService } from './space.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Space])],\n  controllers: [SpaceController],\n  providers: [SpaceService],\n  exports: [TypeOrmModule],\n})\nexport class SpaceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpaceService.html":{"url":"injectables/SpaceService.html","title":"injectable - SpaceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/space/space.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_spaceRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/space/space.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _spaceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSpaceDto: CreateSpaceDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/space/space.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSpaceDto\n                                    \n                                                CreateSpaceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/space/space.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/space/space.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/space/space.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateSpaceDto: UpdateSpaceDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/space/space.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSpaceDto\n                                    \n                                                UpdateSpaceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Space } from './entities/space.entity';\nimport { CreateSpaceDto } from './dtos/create-space.dto';\nimport { UpdateSpaceDto } from './dtos/update-space.dto';\n\n@Injectable()\nexport class SpaceService {\n  constructor(\n    @InjectRepository(Space)\n    private readonly _spaceRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this._spaceRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const space = await this._spaceRepository.findOneBy({ id });\n    if (!space) {\n      throw new NotFoundException(`Space with id \"${id} not found\"`);\n    }\n\n    return space;\n  }\n\n  async create(createSpaceDto: CreateSpaceDto): Promise {\n    return await this._spaceRepository.save(createSpaceDto);\n  }\n\n  async update(id: number, updateSpaceDto: UpdateSpaceDto): Promise {\n    const toUpdate = await this.findOne(id);\n    const updatedSpace = Object.assign(toUpdate, updateSpaceDto);\n    return await this._spaceRepository.save(updatedSpace);\n  }\n\n  async remove(id: number): Promise {\n    const space = await this.findOne(id);\n    return this._spaceRepository.remove(space);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRequestDto.html":{"url":"classes/UpdateRequestDto.html","title":"class - UpdateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/request/dto/update-request.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRequestDto } from './create-request.dto';\n\nexport class UpdateRequestDto extends PartialType(CreateRequestDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReserveDto.html":{"url":"classes/UpdateReserveDto.html","title":"class - UpdateReserveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReserveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reserve/dto/update-reserve.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateReserveDto } from './create-reserve.dto';\n\nexport class UpdateReserveDto extends PartialType(CreateReserveDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSpaceDto.html":{"url":"classes/UpdateSpaceDto.html","title":"class - UpdateSpaceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSpaceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/space/dtos/update-space.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateSpaceDto } from './create-space.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class UpdateSpaceDto extends PartialType(CreateSpaceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/database-config.service.ts\n            \n            injectable\n            DatabaseConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/request/dto/create-request.dto.ts\n            \n            class\n            CreateRequestDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/request/dto/update-request.dto.ts\n            \n            class\n            UpdateRequestDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/request/entities/request.entity.ts\n            \n            entity\n            Request\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/request/mocks/request-repository.mock.ts\n            \n            class\n            RequestRepositoryMock\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/request/mocks/request-service.mock.ts\n            \n            class\n            RequestServiceMock\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/request/request.controller.ts\n            \n            controller\n            RequestController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/request/request.service.ts\n            \n            injectable\n            RequestService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/reserve/dto/create-reserve.dto.ts\n            \n            class\n            CreateReserveDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/reserve/dto/update-reserve.dto.ts\n            \n            class\n            UpdateReserveDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/reserve/entities/reserve.entity.ts\n            \n            entity\n            Reserve\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/reserve/reserve.controller.ts\n            \n            controller\n            ReserveController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/reserve/reserve.service.ts\n            \n            injectable\n            ReserveService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/space/dtos/create-space.dto.ts\n            \n            class\n            CreateSpaceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/space/dtos/update-space.dto.ts\n            \n            class\n            UpdateSpaceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/space/entities/space.entity.ts\n            \n            entity\n            Space\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/space/space.controller.ts\n            \n            controller\n            SpaceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/space/space.service.ts\n            \n            injectable\n            SpaceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                test/request/mocks/request-repository.mock.ts\n            \n            class\n            RequestRepositoryMock\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            class-validators : ^1.0.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRESERVE API\nThis is an example of a classroom reservation rest api built with NestJS.\nInstallation\nInstall dependencies with npm.\nnpm installLibraries used\n\n@nestjs/config\n@nestjs/typeorm\n@nestjs/swagger\ntypeorm\nclass-validators\nclass-transformer\npg\n\nEnvironment variables\nCreate a .env file in the root of the project and add these properties with their respective values.\nDATABASE_TYPE=postgres\nDATABASE_HOST=localhost\nDATABASE_PORT=port\nDATABASE_NAME=reserve_db\nDATABASE_USERNAME=postgres\nDATABASE_PASSWORD=password\nDATABASE_AUTOLOADENTITIES=true\nDATABASE_SYNCHRONIZE=true\nNEST_PORT=3000Docker\nCreate a docker-compose file in the root of the project and add this properties with their values\nversion: '3'\n  services:\n    db:\n      image: postgres:14.3\n      restart: always\n      ports:\n        - 5433:5432\n      environment:\n        POSTGRES_PASSWORD: ${DATABASE_PASSWORD}\n        POSTGRES_DB: ${DATABASE_NAME}\n      container_name: reservedb\n      volumes:\n        - ./postgres:/var/lib/postgresql/dataRun\nTo run the nestjs project, first we need to run the following code.\ndocker-compose up -dFinally we need to run the project\nnpm run start\nor\nnpm run start:devTest\nTo run unit test in our classes, we need to run the following code.\nnpm run test\nor\nnpm run test:watchTo run e2e test, we need to run the follogin code.\nnpm run e2e\nor\nnpm run e2e:watchTo see the coverage of our project, we need to run the following code.\nnpm run test:covOpen API\nYou can access swagger with this URL.\nhttp://localhost:/api\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReserveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpaceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_providers\n\n\n\ncluster_ReserveModule\n\n\n\ncluster_ReserveModule_providers\n\n\n\ncluster_SpaceModule\n\n\n\ncluster_SpaceModule_providers\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nRequestModule->AppModule\n\n\n\n\n\nReserveModule\n\nReserveModule\n\nAppModule -->\n\nReserveModule->AppModule\n\n\n\n\n\nSpaceModule\n\nSpaceModule\n\nAppModule -->\n\nSpaceModule->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\nReserveService\n\nReserveService\n\nReserveModule -->\n\nReserveService->ReserveModule\n\n\n\n\n\nSpaceService\n\nSpaceService\n\nSpaceModule -->\n\nSpaceService->SpaceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
